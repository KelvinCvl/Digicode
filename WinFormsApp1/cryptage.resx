<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>